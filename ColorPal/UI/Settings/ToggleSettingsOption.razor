<div class="flex items-center justify-between">
	<h3 class="font-semibold">@Label</h3>

	<button class="toggle-option cursor-pointer"
			active=@(_isActive.ToString().ToLower())
			@onclick=ToggleButtonAsync></button>
</div>

@code {
	[Parameter]
	public LocalStorageService? LocalStorageService { get; set; }

	[Parameter]
	public StateService? StateService { get; set; }

	[Parameter]
	public string? Label { get; set; }

	[Parameter]
	public StorageKey StorageKey { get; set; }

	private bool _isActive = false;

	/// <summary>
	/// Gets local storage active state
	/// </summary>
	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		if (LocalStorageService is null)
			return;

		string? localStorageIsActive = await LocalStorageService.GetKeyAsync<string>(StorageKey);

		_isActive = localStorageIsActive == "true";
	}

	/// <summary>
	/// Toggles button and saves to local storage
	/// </summary>
	private async Task ToggleButtonAsync()
	{
		_isActive = !_isActive;

		if (LocalStorageService is null)
			return;

		await LocalStorageService.SetKeyAsync<string>(StorageKey, _isActive.ToString().ToLower());

		if (StorageKey == StorageKey.ShowColorNames && _isActive)
			_ = StateService?.DecompressParseAndCacheColorNamesAsync();
	}
}
